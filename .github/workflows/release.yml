name: 'Create Release'

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: 'Create Release'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'
      - name: 'Install Poetry'
        run: |
          pipx install poetry
      - name: 'Set up Python 3.11'
        uses: 'actions/setup-python@v5'
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: 'Install project'
        run: |
          poetry install
      - name: 'Run tests'
        run: |
          poetry run pytest
      - name: 'Run linter'
        run: |
          poetry run ruff check hostblocker/ tests/
          poetry run mypy hostblocker/ tests/
      - name: 'Build packages'
        run: 'poetry build'
      - name: 'Get changes'
        run: |
          echo "VERSION=$(poetry version -s)" >> "$GITHUB_ENV"
          {
            echo 'CHANGES<<EOF'
            sed -n '/^## \[[0-9]/,$p' 'CHANGELOG.md' | sed '1s/^## /#/' | sed '/^## /,$d' | sed -e '1s/^#/## /' -e 's/\(###\ .*\)/\1:/' | sed -e :a -e '/^\n*$/N;/\n$/ba'
            echo 'EOF'
          } >> "$GITHUB_ENV"
      - name: 'Create Release'
        id: 'create_release'
        uses: 'softprops/action-gh-release@v2'
        if: "startsWith(github.ref, 'refs/tags/')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ github.ref }}'
          name: 'Hostblocker ${{ github.ref }}'
          files: |
            dist/hostblocker-${{ env.VERSION }}.tar.gz
            dist/hostblocker-${{ env.VERSION }}-py3-none-any.whl
          body: |
            ${{ env.CHANGES }}
          draft: true
          prerelease: false
